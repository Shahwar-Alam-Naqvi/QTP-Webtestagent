from abc import ABC, abstractmethod
from typing import List, Dict, Union


class BaseLLM(ABC):
    """
    Abstract Base Class for Language Learning Models (LLM).

    This class defines the essential methods that any derived LLM class must implement.

    Attributes:
        api_key (Union[str, Dict, None]): API key required for authentication.
        client (None): Placeholder for the client instance.
        extra_args (dict): Additional keyword arguments provided.
    """

    def __init__(self, api_key: Union[str, Dict, None], **kwargs):
        """
        Initializes an instance of BaseLLM with the provided API key and additional arguments.

        Args:
            api_key (Union[str, Dict, None]): The API key used for authentication.
            kwargs: Arbitrary keyword arguments for additional configuration.
        """
        self.api_key = api_key
        self.client = None
        self.extra_args = kwargs

    @abstractmethod
    async def __stream__(self, model: str, messages: List[Dict], **kwargs):
        """
        Abstract method that must be implemented by derived classes to handle streaming responses from the model.

        Args:
            model (str): The model identifier.
            messages (List[Dict]): List of message dictionaries.
            kwargs: Arbitrary keyword arguments for additional configuration.
        """
        pass

    @abstractmethod
    async def __complete__(self, model: str, messages: List[Dict], **kwargs):
        """
        Abstract method that must be implemented by derived classes to handle complete responses from the model.

        Args:
            model (str): The model identifier.
            messages (List[Dict]): List of message dictionaries.
            kwargs: Arbitrary keyword arguments for additional configuration.
        """
        pass

    @abstractmethod
    async def __function_call__(self, model: str, messages: List[Dict],
                                tools: List[Dict],
                                tool_choice: Union[None, Dict], **kwargs):
        """
        Abstract method that must be implemented by derived classes to handle function calls within the model.

        Args:
            model (str): The model identifier.
            messages (List[Dict]): List of message dictionaries.
            tools (List[Dict]): List of tools available.
            tool_choice (Union[None, Dict]): Specific tool choice if applicable.
            kwargs: Arbitrary keyword arguments for additional configuration.
        """
        pass
